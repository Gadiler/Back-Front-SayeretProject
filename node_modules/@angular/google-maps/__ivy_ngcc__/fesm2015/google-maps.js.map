{"version":3,"file":"google-maps.js","sources":["../../../../../../src/google-maps/map-event-manager.ts","../../../../../../src/google-maps/google-map/google-map.ts","../../../../../../src/google-maps/map-base-layer.ts","../../../../../../src/google-maps/map-bicycling-layer/map-bicycling-layer.ts","../../../../../../src/google-maps/map-circle/map-circle.ts","../../../../../../src/google-maps/map-directions-renderer/map-directions-renderer.ts","../../../../../../src/google-maps/map-ground-overlay/map-ground-overlay.ts","../../../../../../src/google-maps/map-info-window/map-info-window.ts","../../../../../../src/google-maps/map-kml-layer/map-kml-layer.ts","../../../../../../src/google-maps/map-marker/map-marker.ts","../../../../../../src/google-maps/map-marker-clusterer/map-marker-clusterer.ts","../../../../../../src/google-maps/map-polygon/map-polygon.ts","../../../../../../src/google-maps/map-polyline/map-polyline.ts","../../../../../../src/google-maps/map-rectangle/map-rectangle.ts","../../../../../../src/google-maps/map-traffic-layer/map-traffic-layer.ts","../../../../../../src/google-maps/map-transit-layer/map-transit-layer.ts","../../../../../../src/google-maps/map-heatmap-layer/map-heatmap-layer.ts","../../../../../../src/google-maps/google-maps-module.ts","../../../../../../src/google-maps/map-directions-renderer/map-directions-service.ts","../../../../../../src/google-maps/map-geocoder/map-geocoder.ts","../../../../../../src/google-maps/public-api.ts","../../../../../../src/google-maps/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {BehaviorSubject, Observable, Subscriber} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\n\ntype MapEventManagerTarget = {\n  addListener: (name: string, callback: (...args: any[]) => void) => google.maps.MapsEventListener;\n} | undefined;\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nexport class MapEventManager {\n  /** Pending listeners that were added before the target was set. */\n  private _pending: {observable: Observable<any>, observer: Subscriber<any>}[] = [];\n  private _listeners: google.maps.MapsEventListener[] = [];\n  private _targetStream = new BehaviorSubject<MapEventManagerTarget>(undefined);\n\n  /** Clears all currently-registered event listeners. */\n  private _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n\n    this._listeners = [];\n  }\n\n  constructor(private _ngZone: NgZone) {}\n\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter<T>(name: string): Observable<T> {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable<T>(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({observable, observer});\n          return undefined;\n        }\n\n        const listener = target.addListener(name, (event: T) => {\n          this._ngZone.run(() => observer.next(event));\n        });\n        this._listeners.push(listener);\n        return () => listener.remove();\n      });\n\n      return observable;\n    }));\n  }\n\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target: MapEventManagerTarget) {\n    const currentTarget = this._targetStream.value;\n\n    if (target === currentTarget) {\n      return;\n    }\n\n    // Clear the listeners from the pre-existing target.\n    if (currentTarget) {\n      this._clearListeners();\n      this._pending = [];\n    }\n\n    this._targetStream.next(target);\n\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._targetStream.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  Inject,\n  PLATFORM_ID,\n  NgZone,\n  SimpleChanges,\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {Observable} from 'rxjs';\nimport {MapEventManager} from '../map-event-manager';\n\ninterface GoogleMapsWindow extends Window {\n  google?: typeof google;\n}\n\n/** default options set to the Googleplex */\nexport const DEFAULT_OPTIONS: google.maps.MapOptions = {\n  center: {lat: 37.421995, lng: -122.084092},\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap' as unknown as google.maps.MapTypeId\n};\n\n/** Arbitrary default height for the map element */\nexport const DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nexport const DEFAULT_WIDTH = '500px';\n\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\n@Component({\n  selector: 'google-map',\n  exportAs: 'googleMap',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GoogleMap implements OnChanges, OnInit, OnDestroy {\n  private _eventManager: MapEventManager = new MapEventManager(this._ngZone);\n  private _mapEl: HTMLElement;\n\n  /**\n   * The underlying google.maps.Map object\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#Map\n   */\n  googleMap?: google.maps.Map;\n\n  /** Whether we're currently rendering inside a browser. */\n  _isBrowser: boolean;\n\n  /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n  @Input() height: string | number | null = DEFAULT_HEIGHT;\n\n  /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n  @Input() width: string | number | null = DEFAULT_WIDTH;\n\n  /**\n   * Type of map that should be rendered. E.g. hybrid map, terrain map etc.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapTypeId\n   */\n  @Input() mapTypeId: google.maps.MapTypeId | undefined;\n\n  @Input()\n  set center(center: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._center = center;\n  }\n  private _center: google.maps.LatLngLiteral|google.maps.LatLng;\n\n  @Input()\n  set zoom(zoom: number) {\n    this._zoom = zoom;\n  }\n  private _zoom: number;\n\n  @Input()\n  set options(options: google.maps.MapOptions) {\n    this._options = options || DEFAULT_OPTIONS;\n  }\n  private _options = DEFAULT_OPTIONS;\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n   */\n  @Output() readonly boundsChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n   */\n  @Output() readonly centerChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n   */\n  @Output() readonly mapClick: Observable<google.maps.MapMouseEvent|google.maps.IconMouseEvent> =\n      this._eventManager\n          .getLazyEmitter<google.maps.MapMouseEvent|google.maps.IconMouseEvent>('click');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n   */\n  @Output() readonly mapDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n   */\n  @Output() readonly mapDrag: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('drag');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n   */\n  @Output() readonly mapDragend: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('dragend');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n   */\n  @Output() readonly mapDragstart: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('dragstart');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n   */\n  @Output() readonly headingChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('heading_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n   */\n  @Output() readonly idle: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('idle');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n   */\n  @Output() readonly maptypeidChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('maptypeid_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n   */\n  @Output()\n  readonly mapMousemove: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n   */\n  @Output() readonly mapMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n   */\n  @Output() readonly mapMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n   */\n  @Output() readonly projectionChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('projection_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n   */\n  @Output() readonly mapRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n   */\n  @Output() readonly tilesloaded: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('tilesloaded');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n   */\n  @Output() readonly tiltChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('tilt_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n   */\n  @Output() readonly zoomChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('zoom_changed');\n\n  constructor(\n    private readonly _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Inject(PLATFORM_ID) platformId: Object) {\n\n    this._isBrowser = isPlatformBrowser(platformId);\n\n    if (this._isBrowser) {\n      const googleMapsWindow: GoogleMapsWindow = window;\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n            'Namespace google not found, cannot construct embedded google ' +\n            'map. Please install the Google Maps JavaScript API: ' +\n            'https://developers.google.com/maps/documentation/javascript/' +\n            'tutorial#Loading_the_Maps_API');\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['height'] || changes['width']) {\n      this._setSize();\n    }\n\n    const googleMap = this.googleMap;\n\n    if (googleMap) {\n      if (changes['options']) {\n        googleMap.setOptions(this._combineOptions());\n      }\n\n      if (changes['center'] && this._center) {\n        googleMap.setCenter(this._center);\n      }\n\n      // Note that the zoom can be zero.\n      if (changes['zoom'] && this._zoom != null) {\n        googleMap.setZoom(this._zoom);\n      }\n\n      if (changes['mapTypeId'] && this.mapTypeId) {\n        googleMap.setMapTypeId(this.mapTypeId);\n      }\n    }\n  }\n\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container')!;\n      this._setSize();\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n      });\n      this._eventManager.setTarget(this.googleMap);\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n  fitBounds(\n      bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.fitBounds(bounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n  panBy(x: number, y: number) {\n    this._assertInitialized();\n    this.googleMap.panBy(x, y);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n  panTo(latLng: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._assertInitialized();\n    this.googleMap.panTo(latLng);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n  panToBounds(\n      latLngBounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds|null {\n    this._assertInitialized();\n    return this.googleMap.getBounds() || null;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.googleMap.getCenter();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n  getClickableIcons(): boolean {\n    this._assertInitialized();\n    return this.googleMap.getClickableIcons();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n  getHeading(): number {\n    this._assertInitialized();\n    return this.googleMap.getHeading();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n  getMapTypeId(): google.maps.MapTypeId|string {\n    this._assertInitialized();\n    return this.googleMap.getMapTypeId();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n  getProjection(): google.maps.Projection|null {\n    this._assertInitialized();\n    return this.googleMap.getProjection();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n  getStreetView(): google.maps.StreetViewPanorama {\n    this._assertInitialized();\n    return this.googleMap.getStreetView();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n  getTilt(): number {\n    this._assertInitialized();\n    return this.googleMap.getTilt();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n  getZoom(): number {\n    this._assertInitialized();\n    return this.googleMap.getZoom();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n  get controls(): google.maps.MVCArray<Node>[] {\n    this._assertInitialized();\n    return this.googleMap.controls;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n  get data(): google.maps.Data {\n    this._assertInitialized();\n    return this.googleMap.data;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n  get mapTypes(): google.maps.MapTypeRegistry {\n    this._assertInitialized();\n    return this.googleMap.mapTypes;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n  get overlayMapTypes(): google.maps.MVCArray<google.maps.MapType> {\n    this._assertInitialized();\n    return this.googleMap.overlayMapTypes;\n  }\n\n  private _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height =\n          this.height === null ? '' : (coerceCssPixelValue(this.height) || DEFAULT_HEIGHT);\n      styles.width = this.width === null ? '' : (coerceCssPixelValue(this.width) || DEFAULT_WIDTH);\n    }\n  }\n\n  /** Combines the center and zoom and the other map options into a single object */\n  private _combineOptions(): google.maps.MapOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      // It's important that we set **some** kind of `center` and `zoom`, otherwise\n      // Google Maps will render a blank rectangle which looks broken.\n      center: this._center || options.center || DEFAULT_OPTIONS.center,\n      zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n      // Passing in an undefined `mapTypeId` seems to break tile loading\n      // so make sure that we have some kind of default (see #22082).\n      mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId\n    };\n  }\n\n  /** Asserts that the map has been initialized. */\n  private _assertInitialized(): asserts this is {googleMap: google.maps.Map} {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                  'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n}\n\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, NgZone, OnDestroy, OnInit} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\n\n@Directive({\n  selector: 'map-base-layer',\n  exportAs: 'mapBaseLayer',\n})\nexport class MapBaseLayer implements OnInit, OnDestroy {\n  constructor(protected readonly _map: GoogleMap, protected readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n      this._assertInitialized();\n      this._setMap();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n\n  private _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n\n  protected _initializeObject() {}\n  protected _setMap() {}\n  protected _unsetMap() {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\n@Directive({\n  selector: 'map-bicycling-layer',\n  exportAs: 'mapBicyclingLayer',\n})\nexport class MapBicyclingLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.BicyclingLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n   */\n  bicyclingLayer?: google.maps.BicyclingLayer;\n\n  protected _initializeObject() {\n    this.bicyclingLayer = new google.maps.BicyclingLayer();\n  }\n\n  protected _setMap() {\n    this._assertLayerInitialized();\n    this.bicyclingLayer.setMap(this._map.googleMap!);\n  }\n\n  protected _unsetMap() {\n    if (this.bicyclingLayer) {\n      this.bicyclingLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {bicyclingLayer: google.maps.BicyclingLayer} {\n    if (!this.bicyclingLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\n@Directive({\n  selector: 'map-circle',\n  exportAs: 'mapCircle',\n})\nexport class MapCircle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.CircleOptions>({});\n  private readonly _center =\n      new BehaviorSubject<google.maps.LatLng|google.maps.LatLngLiteral|undefined>(undefined);\n  private readonly _radius = new BehaviorSubject<number|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * Underlying google.maps.Circle object.\n   *\n   * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n   */\n  circle?: google.maps.Circle;  // initialized in ngOnInit\n\n  @Input()\n  set options(options: google.maps.CircleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set center(center: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._center.next(center);\n  }\n\n  @Input()\n  set radius(radius: number) {\n    this._radius.next(radius);\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n   */\n  @Output() readonly centerChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n   */\n  @Output() readonly circleClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n   */\n  @Output() readonly circleDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n   */\n  @Output() readonly circleDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n   */\n  @Output() readonly circleDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n   */\n  @Output() readonly circleDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n   */\n  @Output() readonly circleMousedown: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n   */\n  @Output() readonly circleMousemove: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n   */\n  @Output() readonly circleMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n   */\n  @Output() readonly circleMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n   */\n  @Output() readonly circleMouseup: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n   */\n  @Output() readonly radiusChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('radius_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n   */\n  @Output() readonly circleRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.circle = new google.maps.Circle(options);\n        });\n        this._assertInitialized();\n        this.circle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.circle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForRadiusChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.circle) {\n      this.circle.setMap(null);\n    }\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.circle.getBounds();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.circle.getCenter();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.circle.getDraggable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.circle.getEditable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n   */\n  getRadius(): number {\n    this._assertInitialized();\n    return this.circle.getRadius();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.circle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.CircleOptions> {\n    return combineLatest([this._options, this._center, this._radius])\n        .pipe(map(([options, center, radius]) => {\n          const combinedOptions: google.maps.CircleOptions = {\n            ...options,\n            center: center || options.center,\n            radius: radius !== undefined ? radius : options.radius,\n          };\n          return combinedOptions;\n        }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.circle.setOptions(options);\n    });\n  }\n\n  private _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n        this.circle.setCenter(center);\n      }\n    });\n  }\n\n  private _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {circle: google.maps.Circle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.circle) {\n        throw Error(\n          'Cannot interact with a Google Map Circle before it has been ' +\n          'initialized. Please wait for the Circle to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\n@Directive({\n  selector: 'map-directions-renderer',\n  exportAs: 'mapDirectionsRenderer',\n})\nexport class MapDirectionsRenderer implements OnInit, OnChanges, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n  @Input()\n  set directions(directions: google.maps.DirectionsResult) {\n    this._directions = directions;\n  }\n  private _directions: google.maps.DirectionsResult;\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions\n   */\n  @Input()\n  set options(options: google.maps.DirectionsRendererOptions) {\n    this._options = options;\n  }\n  private _options: google.maps.DirectionsRendererOptions;\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.directions_changed\n   */\n  @Output()\n  readonly directionsChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('directions_changed');\n\n  /** The underlying google.maps.DirectionsRenderer object. */\n  directionsRenderer?: google.maps.DirectionsRenderer;\n\n  constructor(private readonly _googleMap: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.directionsRenderer.setMap(this._googleMap.googleMap!);\n      this._eventManager.setTarget(this.directionsRenderer);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.directionsRenderer) {\n      if (changes['options']) {\n        this.directionsRenderer.setOptions(this._combineOptions());\n      }\n\n      if (changes['directions'] && this._directions !== undefined) {\n        this.directionsRenderer.setDirections(this._directions);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.directionsRenderer) {\n      this.directionsRenderer.setMap(null);\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getDirections\n   */\n  getDirections(): google.maps.DirectionsResult {\n    this._assertInitialized();\n    return this.directionsRenderer.getDirections();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getPanel\n   */\n  getPanel(): Node {\n    this._assertInitialized();\n    return this.directionsRenderer.getPanel();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getRouteIndex\n   */\n  getRouteIndex(): number {\n    this._assertInitialized();\n    return this.directionsRenderer.getRouteIndex();\n  }\n\n  private _combineOptions(): google.maps.DirectionsRendererOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      directions: this._directions || options.directions,\n      map: this._googleMap.googleMap,\n    };\n  }\n\n  private _assertInitialized():\n      asserts this is {directionsRenderer: google.maps.DirectionsRenderer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.directionsRenderer) {\n        throw Error(\n            'Cannot interact with a Google Map Directions Renderer before it has been ' +\n            'initialized. Please wait for the Directions Renderer to load before trying ' +\n            'to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\n@Directive({\n  selector: 'map-ground-overlay',\n  exportAs: 'mapGroundOverlay',\n})\nexport class MapGroundOverlay implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  private readonly _opacity = new BehaviorSubject<number>(1);\n  private readonly _url = new BehaviorSubject<string>('');\n  private readonly _bounds =\n      new BehaviorSubject<google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|undefined>(\n          undefined);\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.GroundOverlay object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n   */\n  groundOverlay?: google.maps.GroundOverlay;\n\n  /** URL of the image that will be shown in the overlay. */\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /** Bounds for the overlay. */\n  @Input()\n  get bounds(): google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral {\n    return this._bounds.value!;\n  }\n  set bounds(bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /** Whether the overlay is clickable */\n  @Input() clickable: boolean = false;\n\n  /** Opacity of the overlay. */\n  @Input()\n  set opacity(opacity: number) {\n    this._opacity.next(opacity);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n   */\n  @Output() readonly mapClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.dblclick\n   */\n  @Output() readonly mapDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      // The ground overlay setup is slightly different from the other Google Maps objects in that\n      // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n      // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (this.groundOverlay) {\n          this.groundOverlay.setMap(null);\n          this.groundOverlay = undefined;\n        }\n\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        if (bounds) {\n          this._ngZone.runOutsideAngular(() => {\n            this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n              clickable: this.clickable,\n              opacity: this._opacity.value,\n            });\n          });\n          this._assertInitialized();\n          this.groundOverlay.setMap(this._map.googleMap!);\n          this._eventManager.setTarget(this.groundOverlay);\n        }\n      });\n\n      this._watchForOpacityChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.groundOverlay) {\n      this.groundOverlay.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.groundOverlay.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n  getOpacity(): number {\n    this._assertInitialized();\n    return this.groundOverlay.getOpacity();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.groundOverlay.getUrl();\n  }\n\n  private _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity != null) {\n        this._assertInitialized();\n        this.groundOverlay.setOpacity(opacity);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      this._assertInitialized();\n      const overlay = this.groundOverlay;\n      overlay.set('url', url);\n\n      // Google Maps only redraws the overlay if we re-set the map.\n      overlay.setMap(null);\n      overlay.setMap(this._map.googleMap!);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {groundOverlay: google.maps.GroundOverlay} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.groundOverlay) {\n        throw Error(\n            'Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n            'Please wait for the GroundOverlay to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\n@Directive({\n  selector: 'map-info-window',\n  exportAs: 'mapInfoWindow',\n  host: {'style': 'display: none'},\n})\nexport class MapInfoWindow implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.InfoWindowOptions>({});\n  private readonly _position =\n      new BehaviorSubject<google.maps.LatLngLiteral|google.maps.LatLng|undefined>(undefined);\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * Underlying google.maps.InfoWindow\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow\n   */\n  infoWindow?: google.maps.InfoWindow;\n\n  @Input()\n  set options(options: google.maps.InfoWindowOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position.next(position);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n   */\n  @Output() readonly closeclick: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('closeclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.content_changed\n   */\n  @Output() readonly contentChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('content_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n   */\n  @Output() readonly domready: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('domready');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.position_changed\n   */\n  @Output() readonly positionChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.zindex_changed\n   */\n  @Output() readonly zindexChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  constructor(private readonly _googleMap: GoogleMap,\n              private _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      const combinedOptionsChanges = this._combineOptions();\n\n      combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.infoWindow = new google.maps.InfoWindow(options);\n        });\n\n        this._eventManager.setTarget(this.infoWindow);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPositionChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n\n    // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n  close() {\n    this._assertInitialized();\n    this.infoWindow.close();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n  getContent(): string|Node {\n    this._assertInitialized();\n    return this.infoWindow.getContent();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.infoWindow.getPosition();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.infoWindow.getZIndex();\n  }\n\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n  open(anchor?: MapAnchorPoint) {\n    this._assertInitialized();\n    const anchorObject = anchor ? anchor.getAnchor() : undefined;\n\n    // Prevent the info window from initializing when trying to reopen on the same anchor.\n    // Note that when the window is opened for the first time, the anchor will always be\n    // undefined. If that's the case, we have to allow it to open in order to handle the\n    // case where the window doesn't have an anchor, but is placed at a particular position.\n    if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n      this._elementRef.nativeElement.style.display = '';\n      this.infoWindow.open(this._googleMap.googleMap, anchorObject);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.InfoWindowOptions> {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions: google.maps.InfoWindowOptions = {\n        ...options,\n        position: position || options.position,\n        content: this._elementRef.nativeElement,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n      this.infoWindow.setOptions(options);\n    });\n  }\n\n  private _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {infoWindow: google.maps.InfoWindow} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.infoWindow) {\n        throw Error(\n            'Cannot interact with a Google Map Info Window before it has been ' +\n            'initialized. Please wait for the Info Window to load before trying to interact with ' +\n            'it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\n@Directive({\n  selector: 'map-kml-layer',\n  exportAs: 'mapKmlLayer',\n})\nexport class MapKmlLayer implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.KmlLayerOptions>({});\n  private readonly _url = new BehaviorSubject<string>('');\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.KmlLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n   */\n  kmlLayer?: google.maps.KmlLayer;\n\n  @Input()\n  set options(options: google.maps.KmlLayerOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n   */\n  @Output() readonly kmlClick: Observable<google.maps.KmlMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.KmlMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml\n   * #KmlLayer.defaultviewport_changed\n   */\n  @Output() readonly defaultviewportChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('defaultviewport_changed');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n   */\n  @Output() readonly statusChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('status_changed');\n\n  constructor(private readonly _map: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.kmlLayer = new google.maps.KmlLayer(options));\n        this._assertInitialized();\n        this.kmlLayer.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.kmlLayer);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.kmlLayer) {\n      this.kmlLayer.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n  getDefaultViewport(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.kmlLayer.getDefaultViewport();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n  getMetadata(): google.maps.KmlLayerMetadata {\n    this._assertInitialized();\n    return this.kmlLayer.getMetadata();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n  getStatus(): google.maps.KmlLayerStatus {\n    this._assertInitialized();\n    return this.kmlLayer.getStatus();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.kmlLayer.getUrl();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.kmlLayer.getZIndex();\n  }\n\n  private _combineOptions(): Observable<google.maps.KmlLayerOptions> {\n    return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n      const combinedOptions: google.maps.KmlLayerOptions = {\n        ...options,\n        url: url || options.url,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is { kmlLayer: google.maps.KmlLayer } {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.kmlLayer) {\n        throw Error(\n            'Cannot interact with a Google Map KmlLayer before it has been ' +\n            'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nexport const DEFAULT_MARKER_OPTIONS = {\n  position: {lat: 37.421995, lng: -122.084092},\n};\n\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\n@Directive({\n  selector: 'map-marker',\n  exportAs: 'mapMarker',\n})\nexport class MapMarker implements OnInit, OnChanges, OnDestroy, MapAnchorPoint {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n  @Input()\n  set title(title: string) {\n    this._title = title;\n  }\n  private _title: string;\n\n  /**\n   * Position of the marker. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n   */\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position = position;\n  }\n  private _position: google.maps.LatLngLiteral|google.maps.LatLng;\n\n  /**\n   * Label for the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n   */\n  @Input()\n  set label(label: string|google.maps.MarkerLabel) {\n    this._label = label;\n  }\n  private _label: string|google.maps.MarkerLabel;\n\n  /**\n   * Whether the marker is clickable. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n   */\n  @Input()\n  set clickable(clickable: boolean) {\n    this._clickable = clickable;\n  }\n  private _clickable: boolean;\n\n  /**\n   * Options used to configure the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n   */\n  @Input()\n  set options(options: google.maps.MarkerOptions) {\n    this._options = options;\n  }\n  private _options: google.maps.MarkerOptions;\n\n  /**\n   * Icon to be used for the marker.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n   */\n  @Input()\n  set icon(icon: string | google.maps.Icon | google.maps.Symbol) {\n    this._icon = icon;\n  }\n  private _icon: string | google.maps.Icon | google.maps.Symbol;\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n   */\n  @Output() readonly animationChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('animation_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n   */\n  @Output() readonly mapClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n   */\n  @Output() readonly clickableChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('clickable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n   */\n  @Output() readonly cursorChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('cursor_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n   */\n  @Output() readonly mapDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n   */\n  @Output() readonly mapDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n   */\n  @Output() readonly mapDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n   */\n  @Output() readonly draggableChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('draggable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n   */\n  @Output() readonly mapDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n   */\n  @Output() readonly flatChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('flat_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n   */\n  @Output() readonly iconChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('icon_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n   */\n  @Output() readonly mapMousedown: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n   */\n  @Output() readonly mapMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n   */\n  @Output() readonly mapMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n   */\n  @Output() readonly mapMouseup: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n   */\n  @Output() readonly positionChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n   */\n  @Output() readonly mapRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n   */\n  @Output() readonly shapeChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('shape_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n   */\n  @Output() readonly titleChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('title_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n   */\n  @Output() readonly visibleChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('visible_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n   */\n  @Output() readonly zindexChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  /**\n   * The underlying google.maps.Marker object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/marker#Marker\n   */\n  marker?: google.maps.Marker;\n\n  constructor(\n    private readonly _googleMap: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.marker = new google.maps.Marker(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.marker.setMap(this._googleMap.googleMap!);\n      this._eventManager.setTarget(this.marker);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {marker, _title, _position, _label, _clickable, _icon} = this;\n\n    if (marker) {\n      if (changes['options']) {\n        marker.setOptions(this._combineOptions());\n      }\n\n      if (changes['title'] && _title !== undefined) {\n        marker.setTitle(_title);\n      }\n\n      if (changes['position'] && _position) {\n        marker.setPosition(_position);\n      }\n\n      if (changes['label'] && _label !== undefined) {\n        marker.setLabel(_label);\n      }\n\n      if (changes['clickable'] && _clickable !== undefined) {\n        marker.setClickable(_clickable);\n      }\n\n      if (changes['icon'] && _icon) {\n        marker.setIcon(_icon);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n  getAnimation(): google.maps.Animation|null {\n    this._assertInitialized();\n    return this.marker.getAnimation() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n  getClickable(): boolean {\n    this._assertInitialized();\n    return this.marker.getClickable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n  getCursor(): string|null {\n    this._assertInitialized();\n    return this.marker.getCursor() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return !!this.marker.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n  getIcon(): string|google.maps.Icon|google.maps.Symbol|null {\n    this._assertInitialized();\n    return this.marker.getIcon() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n  getLabel(): google.maps.MarkerLabel|null {\n    this._assertInitialized();\n    return this.marker.getLabel() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n  getOpacity(): number|null {\n    this._assertInitialized();\n    return this.marker.getOpacity() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.marker.getPosition() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n  getShape(): google.maps.MarkerShape|null {\n    this._assertInitialized();\n    return this.marker.getShape() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n  getTitle(): string|null {\n    this._assertInitialized();\n    return this.marker.getTitle() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.marker.getVisible();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n  getZIndex(): number|null {\n    this._assertInitialized();\n    return this.marker.getZIndex() || null;\n  }\n\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n  getAnchor(): google.maps.MVCObject {\n    this._assertInitialized();\n    return this.marker;\n  }\n\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  private _combineOptions(): google.maps.MarkerOptions {\n    const options = this._options || DEFAULT_MARKER_OPTIONS;\n    return {\n      ...options,\n      title: this._title || options.title,\n      position: this._position || options.position,\n      label: this._label || options.label,\n      clickable: this._clickable ?? options.clickable,\n      map: this._googleMap.googleMap,\n      icon: this._icon || options.icon\n    };\n  }\n\n  private _assertInitialized(): asserts this is {marker: google.maps.Marker} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.marker) {\n        throw Error(\n            'Cannot interact with a Google Map Marker before it has been ' +\n            'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n/// <reference path=\"marker-clusterer-types.ts\" />\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapMarker} from '../map-marker/map-marker';\n\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS: MarkerClustererOptions = {};\n\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\n@Component({\n  selector: 'map-marker-clusterer',\n  exportAs: 'mapMarkerClusterer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MapMarkerClusterer implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n  private readonly _currentMarkers = new Set<google.maps.Marker>();\n  private readonly _eventManager = new MapEventManager(this._ngZone);\n  private readonly _destroy = new Subject<void>();\n\n  /** Whether the clusterer is allowed to be initialized. */\n  private readonly _canInitialize: boolean;\n\n  @Input()\n  ariaLabelFn: AriaLabelFn = () => ''\n\n  @Input()\n  set averageCenter(averageCenter: boolean) {\n    this._averageCenter = averageCenter;\n  }\n  private _averageCenter: boolean;\n\n  @Input() batchSize?: number;\n\n  @Input()\n  set batchSizeIE(batchSizeIE: number) {\n    this._batchSizeIE = batchSizeIE;\n  }\n  private _batchSizeIE: number;\n\n  @Input()\n  set calculator(calculator: Calculator) {\n    this._calculator = calculator;\n  }\n  private _calculator: Calculator;\n\n  @Input()\n  set clusterClass(clusterClass: string) {\n    this._clusterClass = clusterClass;\n  }\n  private _clusterClass: string;\n\n  @Input()\n  set enableRetinaIcons(enableRetinaIcons: boolean) {\n    this._enableRetinaIcons = enableRetinaIcons;\n  }\n  private _enableRetinaIcons: boolean;\n\n  @Input()\n  set gridSize(gridSize: number) {\n    this._gridSize = gridSize;\n  }\n  private _gridSize: number;\n\n  @Input()\n  set ignoreHidden(ignoreHidden: boolean) {\n    this._ignoreHidden = ignoreHidden;\n  }\n  private _ignoreHidden: boolean;\n\n  @Input()\n  set imageExtension(imageExtension: string) {\n    this._imageExtension = imageExtension;\n  }\n  private _imageExtension: string;\n\n  @Input()\n  set imagePath(imagePath: string) {\n    this._imagePath = imagePath;\n  }\n  private _imagePath: string;\n\n  @Input()\n  set imageSizes(imageSizes: number[]) {\n    this._imageSizes = imageSizes;\n  }\n  private _imageSizes: number[];\n\n  @Input()\n  set maxZoom(maxZoom: number) {\n    this._maxZoom = maxZoom;\n  }\n  private _maxZoom: number;\n\n  @Input()\n  set minimumClusterSize(minimumClusterSize: number) {\n    this._minimumClusterSize = minimumClusterSize;\n  }\n  private _minimumClusterSize: number;\n\n  @Input()\n  set styles(styles: ClusterIconStyle[]) {\n    this._styles = styles;\n  }\n  private _styles: ClusterIconStyle[];\n\n  @Input()\n  set title(title: string) {\n    this._title = title;\n  }\n  private _title: string;\n\n  @Input()\n  set zIndex(zIndex: number) {\n    this._zIndex = zIndex;\n  }\n  private _zIndex: number;\n\n  @Input()\n  set zoomOnClick(zoomOnClick: boolean) {\n    this._zoomOnClick = zoomOnClick;\n  }\n  private _zoomOnClick: boolean;\n\n  @Input()\n  set options(options: MarkerClustererOptions) {\n    this._options = options;\n  }\n  private _options: MarkerClustererOptions;\n\n  /**\n   * See\n   * googlemaps.github.io/v3-utility-library/modules/\n   * _google_markerclustererplus.html#clusteringbegin\n   */\n  @Output() readonly clusteringbegin: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('clusteringbegin');\n\n  /**\n   * See\n   * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n   */\n  @Output() readonly clusteringend: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('clusteringend');\n\n  /** Emits when a cluster has been clicked. */\n  @Output()\n  readonly clusterClick: Observable<Cluster> = this._eventManager.getLazyEmitter<Cluster>('click');\n\n  @ContentChildren(MapMarker, {descendants: true}) _markers: QueryList<MapMarker>;\n\n  /**\n   * The underlying MarkerClusterer object.\n   *\n   * See\n   * googlemaps.github.io/v3-utility-library/classes/\n   * _google_markerclustererplus.markerclusterer.html\n   */\n  markerClusterer?: MarkerClusterer;\n\n  constructor(private readonly _googleMap: GoogleMap, private readonly _ngZone: NgZone) {\n    this._canInitialize = this._googleMap._isBrowser;\n  }\n\n  ngOnInit() {\n    if (this._canInitialize) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap!, [],\n            this._combineOptions());\n      });\n\n      this._assertInitialized();\n      this._eventManager.setTarget(this.markerClusterer);\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this._canInitialize) {\n      this._watchForMarkerChanges();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {\n      markerClusterer: clusterer, ariaLabelFn, _averageCenter, _batchSizeIE, _calculator, _styles,\n      _clusterClass, _enableRetinaIcons, _gridSize, _ignoreHidden, _imageExtension, _imagePath,\n      _imageSizes, _maxZoom, _minimumClusterSize, _title, _zIndex, _zoomOnClick\n    } = this;\n\n    if (clusterer) {\n      if (changes['options']) {\n        clusterer.setOptions(this._combineOptions());\n      }\n      if (changes['ariaLabelFn']) {\n        clusterer.ariaLabelFn = ariaLabelFn;\n      }\n      if (changes['averageCenter'] && _averageCenter !== undefined) {\n        clusterer.setAverageCenter(_averageCenter);\n      }\n      if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n        clusterer.setBatchSizeIE(_batchSizeIE);\n      }\n      if (changes['calculator'] && !!_calculator) {\n        clusterer.setCalculator(_calculator);\n      }\n      if (changes['clusterClass'] && _clusterClass !== undefined) {\n        clusterer.setClusterClass(_clusterClass);\n      }\n      if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n        clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n      }\n      if (changes['gridSize'] && _gridSize !== undefined) {\n        clusterer.setGridSize(_gridSize);\n      }\n      if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n        clusterer.setIgnoreHidden(_ignoreHidden);\n      }\n      if (changes['imageExtension'] && _imageExtension !== undefined) {\n        clusterer.setImageExtension(_imageExtension);\n      }\n      if (changes['imagePath'] && _imagePath !== undefined) {\n        clusterer.setImagePath(_imagePath);\n      }\n      if (changes['imageSizes'] && _imageSizes) {\n        clusterer.setImageSizes(_imageSizes);\n      }\n      if (changes['maxZoom'] && _maxZoom !== undefined) {\n        clusterer.setMaxZoom(_maxZoom);\n      }\n      if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n        clusterer.setMinimumClusterSize(_minimumClusterSize);\n      }\n      if (changes['styles'] && _styles) {\n        clusterer.setStyles(_styles);\n      }\n      if (changes['title'] && _title !== undefined) {\n        clusterer.setTitle(_title);\n      }\n      if (changes['zIndex'] && _zIndex !== undefined) {\n        clusterer.setZIndex(_zIndex);\n      }\n      if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n        clusterer.setZoomOnClick(_zoomOnClick);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._eventManager.destroy();\n    if (this.markerClusterer) {\n      this.markerClusterer.setMap(null);\n    }\n  }\n\n  fitMapToMarkers(padding: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.markerClusterer.fitMapToMarkers(padding);\n  }\n\n  getAverageCenter(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getAverageCenter();\n  }\n\n  getBatchSizeIE(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getBatchSizeIE();\n  }\n\n  getCalculator(): Calculator {\n    this._assertInitialized();\n    return this.markerClusterer.getCalculator();\n  }\n\n  getClusterClass(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getClusterClass();\n  }\n\n  getClusters(): Cluster[] {\n    this._assertInitialized();\n    return this.markerClusterer.getClusters();\n  }\n\n  getEnableRetinaIcons(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getEnableRetinaIcons();\n  }\n\n  getGridSize(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getGridSize();\n  }\n\n  getIgnoreHidden(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getIgnoreHidden();\n  }\n\n  getImageExtension(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getImageExtension();\n  }\n\n  getImagePath(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getImagePath();\n  }\n\n  getImageSizes(): number[] {\n    this._assertInitialized();\n    return this.markerClusterer.getImageSizes();\n  }\n\n  getMaxZoom(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getMaxZoom();\n  }\n\n  getMinimumClusterSize(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getMinimumClusterSize();\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    this._assertInitialized();\n    return this.markerClusterer.getStyles();\n  }\n\n  getTitle(): string {\n    this._assertInitialized();\n    return this.markerClusterer.getTitle();\n  }\n\n  getTotalClusters(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalClusters();\n  }\n\n  getTotalMarkers(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalMarkers();\n  }\n\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.markerClusterer.getZIndex();\n  }\n\n  getZoomOnClick(): boolean {\n    this._assertInitialized();\n    return this.markerClusterer.getZoomOnClick();\n  }\n\n  private _combineOptions(): MarkerClustererOptions {\n    const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n    return {\n      ...options,\n      ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n      averageCenter: this._averageCenter ?? options.averageCenter,\n      batchSize: this.batchSize ?? options.batchSize,\n      batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n      calculator: this._calculator ?? options.calculator,\n      clusterClass: this._clusterClass ?? options.clusterClass,\n      enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n      gridSize: this._gridSize ?? options.gridSize,\n      ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n      imageExtension: this._imageExtension ?? options.imageExtension,\n      imagePath: this._imagePath ?? options.imagePath,\n      imageSizes: this._imageSizes ?? options.imageSizes,\n      maxZoom: this._maxZoom ?? options.maxZoom,\n      minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n      styles: this._styles ?? options.styles,\n      title: this._title ?? options.title,\n      zIndex: this._zIndex ?? options.zIndex,\n      zoomOnClick: this._zoomOnClick ?? options.zoomOnClick,\n    };\n  }\n\n  private _watchForMarkerChanges() {\n    this._assertInitialized();\n    const initialMarkers: google.maps.Marker[] = [];\n    for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n      this._currentMarkers.add(marker);\n      initialMarkers.push(marker);\n    }\n    this.markerClusterer.addMarkers(initialMarkers);\n\n    this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(\n      (markerComponents: MapMarker[]) => {\n        this._assertInitialized();\n        const newMarkers = new Set<google.maps.Marker>(this._getInternalMarkers(markerComponents));\n        const markersToAdd: google.maps.Marker[] = [];\n        const markersToRemove: google.maps.Marker[] = [];\n        for (const marker of Array.from(newMarkers)) {\n          if (!this._currentMarkers.has(marker)) {\n            this._currentMarkers.add(marker);\n            markersToAdd.push(marker);\n          }\n        }\n        for (const marker of Array.from(this._currentMarkers)) {\n          if (!newMarkers.has(marker)) {\n            markersToRemove.push(marker);\n          }\n        }\n        this.markerClusterer.addMarkers(markersToAdd, true);\n        this.markerClusterer.removeMarkers(markersToRemove, true);\n        this.markerClusterer.repaint();\n        for (const marker of markersToRemove) {\n          this._currentMarkers.delete(marker);\n        }\n    });\n  }\n\n  private _getInternalMarkers(markers: MapMarker[]): google.maps.Marker[] {\n    return markers.filter(markerComponent => !!markerComponent.marker)\n        .map(markerComponent => markerComponent.marker!);\n  }\n\n  private _assertInitialized(): asserts this is {markerClusterer: MarkerClusterer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.markerClusterer) {\n        throw Error(\n          'Cannot interact with a MarkerClusterer before it has been initialized. ' +\n          'Please wait for the MarkerClusterer to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\n@Directive({\n  selector: 'map-polygon',\n  exportAs: 'mapPolygon',\n})\nexport class MapPolygon implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolygonOptions>({});\n  private readonly _paths =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n                          google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polygon object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n   */\n  polygon?: google.maps.Polygon;\n\n  @Input()\n  set options(options: google.maps.PolygonOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set paths(paths: google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n            google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n            google.maps.LatLngLiteral[]) {\n    this._paths.next(paths);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n   */\n  @Output() readonly polygonClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n   */\n  @Output() readonly polygonDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n   */\n  @Output() readonly polygonDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n   */\n  @Output() readonly polygonDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n   */\n  @Output() readonly polygonDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n   */\n  @Output() readonly polygonMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n   */\n  @Output() readonly polygonMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n   */\n  @Output() readonly polygonMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n   */\n  @Output() readonly polygonMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n   */\n  @Output() readonly polygonMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n   */\n  @Output() readonly polygonRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.polygon = new google.maps.Polygon(options);\n        });\n        this._assertInitialized();\n        this.polygon.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polygon);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polygon.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n  getPaths(): google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>> {\n    this._assertInitialized();\n    return this.polygon.getPaths();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polygon.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolygonOptions> {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions: google.maps.PolygonOptions = {\n        ...options,\n        paths: paths || options.paths,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polygon.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polygon: google.maps.Polygon} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polygon) {\n        throw Error(\n            'Cannot interact with a Google Map Polygon before it has been ' +\n            'initialized. Please wait for the Polygon to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\n@Directive({\n  selector: 'map-polyline',\n  exportAs: 'mapPolyline',\n})\nexport class MapPolyline implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolylineOptions>({});\n  private readonly _path =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polyline object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n   */\n  polyline?: google.maps.Polyline;\n\n  @Input()\n  set options(options: google.maps.PolylineOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set path(path: google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n           google.maps.LatLngLiteral[]) {\n    this._path.next(path);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n   */\n  @Output() readonly polylineClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n   */\n  @Output() readonly polylineDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n   */\n  @Output() readonly polylineDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n   */\n  @Output() readonly polylineDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n   */\n  @Output() readonly polylineDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n   */\n  @Output() readonly polylineMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n   */\n  @Output() readonly polylineMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n   */\n  @Output() readonly polylineMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n   */\n  @Output() readonly polylineMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n   */\n  @Output() readonly polylineMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n   */\n  @Output() readonly polylineRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(\n    private readonly _map: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.polyline = new google.maps.Polyline(options));\n        this._assertInitialized();\n        this.polyline.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polyline);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polyline) {\n      this.polyline.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polyline.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polyline.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolylineOptions> {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions: google.maps.PolylineOptions = {\n        ...options,\n        path: path || options.path,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polyline.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n        this.polyline.setPath(path);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polyline: google.maps.Polyline} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polyline) {\n        throw Error(\n            'Cannot interact with a Google Map Polyline before it has been ' +\n            'initialized. Please wait for the Polyline to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, OnDestroy, OnInit, Output, NgZone} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\n@Directive({\n  selector: 'map-rectangle',\n  exportAs: 'mapRectangle',\n})\nexport class MapRectangle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.RectangleOptions>({});\n  private readonly _bounds =\n      new BehaviorSubject<google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|undefined>(\n          undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Rectangle object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n   */\n  rectangle?: google.maps.Rectangle;\n\n  @Input()\n  set options(options: google.maps.RectangleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set bounds(bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n   */ @Output() readonly boundsChanged: Observable<void> =\n    this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n   */\n  @Output() readonly rectangleClick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n   */\n  @Output() readonly rectangleDblclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n   */\n  @Output() readonly rectangleDrag: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n   */\n  @Output() readonly rectangleDragend: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n   */\n  @Output() readonly rectangleDragstart: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n   */\n  @Output() readonly rectangleMousedown: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n   */\n  @Output() readonly rectangleMousemove: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mousemove');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n   */\n  @Output() readonly rectangleMouseout: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n   */\n  @Output() readonly rectangleMouseover: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n   */\n  @Output() readonly rectangleMouseup: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n   */\n  @Output() readonly rectangleRightclick: Observable<google.maps.MapMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MapMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.rectangle = new google.maps.Rectangle(options);\n        });\n        this._assertInitialized();\n        this.rectangle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.rectangle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForBoundsChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.rectangle) {\n      this.rectangle.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.rectangle.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getEditable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.RectangleOptions> {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions: google.maps.RectangleOptions = {\n        ...options,\n        bounds: bounds || options.bounds,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.rectangle.setOptions(options);\n    });\n  }\n\n  private _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {rectangle: google.maps.Rectangle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.rectangle) {\n        throw Error(\n            'Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n            'Please wait for the Rectangle to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\n\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\n@Directive({\n  selector: 'map-traffic-layer',\n  exportAs: 'mapTrafficLayer',\n})\nexport class MapTrafficLayer implements OnInit, OnDestroy {\n  private readonly _autoRefresh = new BehaviorSubject<boolean>(true);\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.TrafficLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n   */\n  trafficLayer?: google.maps.TrafficLayer;\n\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n  @Input()\n  set autoRefresh(autoRefresh: boolean) {\n    this._autoRefresh.next(autoRefresh);\n  }\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        this._ngZone.runOutsideAngular(() => {\n          this.trafficLayer = new google.maps.TrafficLayer(options);\n        });\n        this._assertInitialized();\n        this.trafficLayer.setMap(this._map.googleMap!);\n      });\n\n      this._watchForAutoRefreshChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.trafficLayer) {\n      this.trafficLayer.setMap(null);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.TrafficLayerOptions> {\n    return this._autoRefresh.pipe(map(autoRefresh => {\n      const combinedOptions: google.maps.TrafficLayerOptions = {autoRefresh};\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForAutoRefreshChanges() {\n    this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.trafficLayer.setOptions(options);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {trafficLayer: google.maps.TrafficLayer} {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.trafficLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n          'Please wait for the Traffic Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\n@Directive({\n  selector: 'map-transit-layer',\n  exportAs: 'mapTransitLayer',\n})\nexport class MapTransitLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.TransitLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n   */\n  transitLayer?: google.maps.TransitLayer;\n\n  protected _initializeObject() {\n    this.transitLayer = new google.maps.TransitLayer();\n  }\n\n  protected _setMap() {\n    this._assertLayerInitialized();\n    this.transitLayer.setMap(this._map.googleMap!);\n  }\n\n  protected _unsetMap() {\n    if (this.transitLayer) {\n      this.transitLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {transitLayer: google.maps.TransitLayer} {\n    if (!this.transitLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Input,\n  OnDestroy,\n  OnInit,\n  NgZone,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {GoogleMap} from '../google-map/google-map';\n\n/** Possible data that can be shown on a heatmap layer. */\nexport type HeatmapData =\n  google.maps.MVCArray<\n    google.maps.LatLng | google.maps.visualization.WeightedLocation | google.maps.LatLngLiteral> |\n  (google.maps.LatLng | google.maps.visualization.WeightedLocation | google.maps.LatLngLiteral)[];\n\n\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\n@Directive({\n  selector: 'map-heatmap-layer',\n  exportAs: 'mapHeatmapLayer',\n})\nexport class MapHeatmapLayer implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  @Input()\n  set data(data: HeatmapData) {\n    this._data = data;\n  }\n  private _data: HeatmapData;\n\n  /**\n   * Options used to configure the heatmap. See:\n   * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n   */\n  @Input()\n  set options(options: Partial<google.maps.visualization.HeatmapLayerOptions>) {\n    this._options = options;\n  }\n  private _options: Partial<google.maps.visualization.HeatmapLayerOptions>;\n\n  /**\n   * The underlying google.maps.visualization.HeatmapLayer object.\n   *\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  heatmap?: google.maps.visualization.HeatmapLayer;\n\n  constructor(\n    private readonly _googleMap: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (!window.google?.maps?.visualization && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n            'Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n            'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n            'https://developers.google.com/maps/documentation/javascript/visualization');\n      }\n\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n      });\n      this._assertInitialized();\n      this.heatmap.setMap(this._googleMap.googleMap!);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const {_data, heatmap} = this;\n\n    if (heatmap) {\n      if (changes['options']) {\n        heatmap.setOptions(this._combineOptions());\n      }\n\n      if (changes['data'] && _data !== undefined) {\n        heatmap.setData(this._normalizeData(_data));\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.heatmap) {\n      this.heatmap.setMap(null);\n    }\n  }\n\n  /**\n   * Gets the data that is currently shown on the heatmap.\n   * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n   */\n  getData(): HeatmapData {\n    this._assertInitialized();\n    return this.heatmap.getData();\n  }\n\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  private _combineOptions(): google.maps.visualization.HeatmapLayerOptions {\n    const options = this._options || {};\n    return {\n      ...options,\n      data: this._normalizeData(this._data || options.data || []),\n      map: this._googleMap.googleMap,\n    };\n  }\n\n  /**\n   * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n   * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n   * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n   * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n   * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n   * convert it to a `LatLng` object before passing it off to Google Maps.\n   */\n  private _normalizeData(data: HeatmapData) {\n    const result: (google.maps.LatLng|google.maps.visualization.WeightedLocation)[] = [];\n\n    data.forEach(item => {\n      result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n    });\n\n    return result;\n  }\n\n  /** Asserts that the heatmap object has been initialized. */\n  private _assertInitialized(): asserts this is {heatmap: google.maps.visualization.HeatmapLayer} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.heatmap) {\n        throw Error(\n            'Cannot interact with a Google Map HeatmapLayer before it has been ' +\n            'initialized. Please wait for the heatmap to load before trying to interact with it.');\n      }\n    }\n  }\n}\n\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value: any): value is google.maps.LatLngLiteral {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\nimport {MapBaseLayer} from './map-base-layer';\nimport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nimport {MapCircle} from './map-circle/map-circle';\nimport {MapDirectionsRenderer} from './map-directions-renderer/map-directions-renderer';\nimport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nimport {MapInfoWindow} from './map-info-window/map-info-window';\nimport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nimport {MapMarker} from './map-marker/map-marker';\nimport {MapMarkerClusterer} from './map-marker-clusterer/map-marker-clusterer';\nimport {MapPolygon} from './map-polygon/map-polygon';\nimport {MapPolyline} from './map-polyline/map-polyline';\nimport {MapRectangle} from './map-rectangle/map-rectangle';\nimport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nimport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\nimport {MapHeatmapLayer} from './map-heatmap-layer/map-heatmap-layer';\n\nconst COMPONENTS = [\n  GoogleMap,\n  MapBaseLayer,\n  MapBicyclingLayer,\n  MapCircle,\n  MapDirectionsRenderer,\n  MapGroundOverlay,\n  MapInfoWindow,\n  MapKmlLayer,\n  MapMarker,\n  MapMarkerClusterer,\n  MapPolygon,\n  MapPolyline,\n  MapRectangle,\n  MapTrafficLayer,\n  MapTransitLayer,\n  MapHeatmapLayer,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class GoogleMapsModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface MapDirectionsResponse {\n  status: google.maps.DirectionsStatus;\n  result?: google.maps.DirectionsResult;\n}\n\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\n@Injectable({providedIn: 'root'})\nexport class MapDirectionsService {\n  private _directionsService: google.maps.DirectionsService|undefined;\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n  route(request: google.maps.DirectionsRequest): Observable<MapDirectionsResponse> {\n    return new Observable(observer => {\n      // Initialize the `DirectionsService` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._directionsService) {\n        this._directionsService = new google.maps.DirectionsService();\n      }\n\n      const callback =\n          (\n            result: google.maps.DirectionsResult|undefined,\n            status: google.maps.DirectionsStatus\n          ) => {\n        this._ngZone.run(() => {\n          observer.next({result, status});\n          observer.complete();\n        });\n      };\n      this._directionsService.route(request, callback);\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport interface MapGeocoderResponse {\n  status: google.maps.GeocoderStatus;\n  results: google.maps.GeocoderResult[];\n}\n\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\n@Injectable({providedIn: 'root'})\nexport class MapGeocoder {\n  private _geocoder: google.maps.Geocoder|undefined;\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n  geocode(request: google.maps.GeocoderRequest): Observable<MapGeocoderResponse> {\n    return new Observable(observer => {\n      // Initialize the `Geocoder` lazily since the Google Maps API may\n      // not have been loaded when the provider is instantiated.\n      if (!this._geocoder) {\n        this._geocoder = new google.maps.Geocoder();\n      }\n\n      this._geocoder.geocode(request, (results, status) => {\n        this._ngZone.run(() => {\n          observer.next({results, status});\n          observer.complete();\n        });\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {GoogleMap} from './google-map/google-map';\nexport {GoogleMapsModule} from './google-maps-module';\nexport {MapAnchorPoint} from './map-anchor-point';\nexport {MapBaseLayer} from './map-base-layer';\nexport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nexport {MapCircle} from './map-circle/map-circle';\nexport {MapDirectionsRenderer} from './map-directions-renderer/map-directions-renderer';\nexport {\n  MapDirectionsService,\n  MapDirectionsResponse,\n} from './map-directions-renderer/map-directions-service';\nexport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nexport {MapInfoWindow} from './map-info-window/map-info-window';\nexport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nexport {MapMarker} from './map-marker/map-marker';\nexport {MapMarkerClusterer} from './map-marker-clusterer/map-marker-clusterer';\nexport {MapPolygon} from './map-polygon/map-polygon';\nexport {MapPolyline} from './map-polyline/map-polyline';\nexport {MapRectangle} from './map-rectangle/map-rectangle';\nexport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nexport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\nexport {MapHeatmapLayer, HeatmapData} from './map-heatmap-layer/map-heatmap-layer';\nexport {MapGeocoder, MapGeocoderResponse} from './map-geocoder/map-geocoder';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}